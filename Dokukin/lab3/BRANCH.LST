Microsoft (R) Macro Assembler Version 5.10                  2/6/21 21:28:12

                                                             Page     1-1


 0000				AStack SEGMENT STACK
 0000  000C[			 DW 12 DUP(?)
	   ????			
			 ]	
				
 0018				AStack ENDS
				
 0000				DATA SEGMENT
 0000  0005			a   DW 5
 0002  0004			b   DW 4
 0004  0003			i   DW 3
 0006  0001			k   DW 1 
 0008  0000			i1  DW 0
 000A  0000			i2  DW 0
 000C  0000			res DW 0
 000E				DATA ENDS
				
 0000				CODE SEGMENT
				 ASSUME CS:CODE, DS:DATA, SS:AStack
				
 0000				Main PROC FAR
 0000  1E			 push DS
 0001  2B C0			 sub  AX,AX
 0003  50			 push AX
 0004  B8 ---- R		 mov AX, DATA
 0007  8E D8			 mov DS, AX
 0009  8B 0E 0000 R		 mov CX, DS:a
 000D  8B 16 0002 R		 mov DX, DS:b
 0011  3B CA			 cmp CX, DX
 0013  7F 03			 jg AgreaterB
 0015  EB 21 90			 jmp AlessequalB
				
 0018				AgreaterB:
 0018  A1 0004 R		 mov AX, DS:i  ; AX = i
 001B  D1 E0			 sal AX, 1     ; AX = 2i
 001D  BB 000F			 mov BX, 15    ; BX = 15
 0020  2B D8			 sub BX, AX    ; BX = 15 - 2i
 0022  89 1E 0008 R		 mov DS:i1, BX ; i1 = 15 - 2i
 0026  03 06 0004 R		 add AX, DS:i  ; AX = 3i
 002A  D1 E0			 sal AX, 1     ; AX = 6i
 002C  BB FFF8			 mov BX, -8    ; BX = -8
 002F  2B D8			 sub BX, AX    ; BX = -6i - 8
 0031  89 1E 000A R		 mov DS:i2, BX ; i2 = -8 - 6i
 0035  EB 1C 90			 jmp cont
				
 0038				AlessequalB:
 0038  A1 0004 R		 mov AX, DS:i  ; AX = i
 003B  D1 E0			 sal AX, 1     ; AX = 2i
 003D  03 06 0004 R		 add AX, DS:i  ; AX = 3i
 0041  BB 0004			 mov BX, 4     ; BX = 4
 0044  03 D8			 add BX, AX    ; BX = 3i + 4
 0046  89 1E 0008 R		 mov DS:i1, BX ; i1 = 3i + 4
 004A  BB 000C			 mov BX, 12    ; BX = 12
 004D  2B D8			 sub BX, AX    ; BX = 12 - 3i
Microsoft (R) Macro Assembler Version 5.10                  2/6/21 21:28:12

                                                             Page     1-2


 004F  89 1E 000A R		 mov DS:i2, BX ; i2 = 12 - 3i
				
 0053				cont:
 0053  A1 0008 R		 mov AX, DS:i1 ; AX = i
 0056				absI1:
 0056  F7 D8			 neg AX
 0058  78 FC			 js absI1      ; while SF is set (AX < 0)
				 ; AX = |i1|
 005A  8B 1E 0006 R		 mov BX, DS:k
 005E  83 FB 00			 cmp BX, 0
 0061  7D 03			 jge KgreaterequalZero
 0063  EB 0B 90			 jmp KlessZero
				
 0066				KgreaterequalZero:
 0066  BB 0006			 mov BX, 6
 0069  3B C3			 cmp AX, BX
 006B  7F 10			 jg I1greater6
 006D  EB 10 90			 jmp endmain
				
 0070				KlessZero:
 0070  8B 1E 000A R		 mov BX, DS:i2
 0074				absI2:
 0074  F7 DB			 neg BX
 0076  78 FC			 js absI2      ; while SF is set (BX < 0)
				 ; BX = |i2|
 0078  03 D8			 add BX, AX    ; BX = |i1| + |i2|
 007A  EB 03 90			 jmp endmain
				
 007D				I1greater6:
 007D  8B D8			 mov BX, AX
				
 007F				endmain:
 007F  89 1E 000C R		 mov DS:res, BX ; res = |i1| + |i2| OR res = ma
				x(6, |i1|)
 0083  CB			 ret
 0084				Main ENDP
 0084				CODE ENDS
				 END Main
Microsoft (R) Macro Assembler Version 5.10                  2/6/21 21:28:12

                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0018	PARA	STACK	
CODE . . . . . . . . . . . . . .  	0084	PARA	NONE	
DATA . . . . . . . . . . . . . .  	000E	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

A  . . . . . . . . . . . . . . .  	L WORD	0000	DATA
ABSI1  . . . . . . . . . . . . .  	L NEAR	0056	CODE
ABSI2  . . . . . . . . . . . . .  	L NEAR	0074	CODE
AGREATERB  . . . . . . . . . . .  	L NEAR	0018	CODE
ALESSEQUALB  . . . . . . . . . .  	L NEAR	0038	CODE

B  . . . . . . . . . . . . . . .  	L WORD	0002	DATA

CONT . . . . . . . . . . . . . .  	L NEAR	0053	CODE

ENDMAIN  . . . . . . . . . . . .  	L NEAR	007F	CODE

I  . . . . . . . . . . . . . . .  	L WORD	0004	DATA
I1 . . . . . . . . . . . . . . .  	L WORD	0008	DATA
I1GREATER6 . . . . . . . . . . .  	L NEAR	007D	CODE
I2 . . . . . . . . . . . . . . .  	L WORD	000A	DATA

K  . . . . . . . . . . . . . . .  	L WORD	0006	DATA
KGREATEREQUALZERO  . . . . . . .  	L NEAR	0066	CODE
KLESSZERO  . . . . . . . . . . .  	L NEAR	0070	CODE

MAIN . . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 0084

RES  . . . . . . . . . . . . . .  	L WORD	000C	DATA

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  branch		
@VERSION . . . . . . . . . . . .  	TEXT  510		


     88 Source  Lines
     88 Total   Lines
     25 Symbols

  47964 + 461343 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
